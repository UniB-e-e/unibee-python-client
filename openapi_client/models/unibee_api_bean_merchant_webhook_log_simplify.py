# coding: utf-8

"""
    OpenAPI UniBee

    This is UniBee api server

    The version of the OpenAPI document: buildtime:202404131246 
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import BaseModel, Field, StrictInt, StrictStr
from typing import Any, ClassVar, Dict, List, Optional
from typing import Optional, Set
from typing_extensions import Self

class UnibeeApiBeanMerchantWebhookLogSimplify(BaseModel):
    """
    UnibeeApiBeanMerchantWebhookLogSimplify
    """ # noqa: E501
    body: Optional[StrictStr] = Field(default=None, description="body(json)")
    create_time: Optional[StrictInt] = Field(default=None, description="create utc time", alias="createTime")
    endpoint_id: Optional[StrictInt] = Field(default=None, alias="endpointId")
    id: Optional[StrictInt] = Field(default=None, description="id")
    mamo: Optional[StrictStr] = Field(default=None, description="mamo")
    merchant_id: Optional[StrictInt] = Field(default=None, description="webhook url", alias="merchantId")
    reconsume_count: Optional[StrictInt] = Field(default=None, alias="reconsumeCount")
    request_id: Optional[StrictStr] = Field(default=None, description="request_id", alias="requestId")
    response: Optional[StrictStr] = Field(default=None, description="response")
    webhook_event: Optional[StrictStr] = Field(default=None, description="webhook_event", alias="webhookEvent")
    webhook_url: Optional[StrictStr] = Field(default=None, description="webhook url", alias="webhookUrl")
    __properties: ClassVar[List[str]] = ["body", "createTime", "endpointId", "id", "mamo", "merchantId", "reconsumeCount", "requestId", "response", "webhookEvent", "webhookUrl"]

    model_config = {
        "populate_by_name": True,
        "validate_assignment": True,
        "protected_namespaces": (),
    }


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of UnibeeApiBeanMerchantWebhookLogSimplify from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of UnibeeApiBeanMerchantWebhookLogSimplify from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "body": obj.get("body"),
            "createTime": obj.get("createTime"),
            "endpointId": obj.get("endpointId"),
            "id": obj.get("id"),
            "mamo": obj.get("mamo"),
            "merchantId": obj.get("merchantId"),
            "reconsumeCount": obj.get("reconsumeCount"),
            "requestId": obj.get("requestId"),
            "response": obj.get("response"),
            "webhookEvent": obj.get("webhookEvent"),
            "webhookUrl": obj.get("webhookUrl")
        })
        return _obj


