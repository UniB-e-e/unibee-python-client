# coding: utf-8

"""
    OpenAPI UniBee

    This is UniBee api server, For this sample, you can use the api key `EUXAgwv3Vcr1PFWt2SgBumMHXn3ImBqM` to test the authorization filters

    The version of the OpenAPI document: 
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.unibee_api_merchant_invoice_edit_req import UnibeeApiMerchantInvoiceEditReq

class TestUnibeeApiMerchantInvoiceEditReq(unittest.TestCase):
    """UnibeeApiMerchantInvoiceEditReq unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UnibeeApiMerchantInvoiceEditReq:
        """Test UnibeeApiMerchantInvoiceEditReq
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UnibeeApiMerchantInvoiceEditReq`
        """
        model = UnibeeApiMerchantInvoiceEditReq()
        if include_optional:
            return UnibeeApiMerchantInvoiceEditReq(
                currency = '',
                finish = True,
                gateway_id = 56,
                invoice_id = '',
                lines = [
                    openapi_client.models.unibee/api/merchant/invoice/new_invoice_item_param.unibee.api.merchant.invoice.NewInvoiceItemParam(
                        description = '', 
                        quantity = 56, 
                        unit_amount_excluding_tax = 56, )
                    ],
                name = '',
                tax_scale = 56
            )
        else:
            return UnibeeApiMerchantInvoiceEditReq(
                invoice_id = '',
        )
        """

    def testUnibeeApiMerchantInvoiceEditReq(self):
        """Test UnibeeApiMerchantInvoiceEditReq"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
