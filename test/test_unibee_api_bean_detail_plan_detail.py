# coding: utf-8

"""
    OpenAPI UniBee

    This is UniBee api server, For this sample, you can use the api key `EUXAgwv3Vcr1PFWt2SgBumMHXn3ImBqM` to test the authorization filters

    The version of the OpenAPI document: 
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.unibee_api_bean_detail_plan_detail import UnibeeApiBeanDetailPlanDetail

class TestUnibeeApiBeanDetailPlanDetail(unittest.TestCase):
    """UnibeeApiBeanDetailPlanDetail unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UnibeeApiBeanDetailPlanDetail:
        """Test UnibeeApiBeanDetailPlanDetail
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UnibeeApiBeanDetailPlanDetail`
        """
        model = UnibeeApiBeanDetailPlanDetail()
        if include_optional:
            return UnibeeApiBeanDetailPlanDetail(
                addon_ids = [
                    56
                    ],
                addons = [
                    openapi_client.models.unibee/api/bean/plan_simplify.unibee.api.bean.PlanSimplify(
                        amount = 56, 
                        binding_addon_ids = '', 
                        binding_onetime_addon_ids = '', 
                        create_time = 56, 
                        currency = '', 
                        description = '', 
                        extra_metric_data = '', 
                        gas_payer = '', 
                        home_url = '', 
                        id = 56, 
                        image_url = '', 
                        interval_count = 56, 
                        interval_unit = '', 
                        merchant_id = 56, 
                        metadata = {
                            'key' : ''
                            }, 
                        plan_name = '', 
                        product_description = '', 
                        product_name = '', 
                        publish_status = 56, 
                        status = 56, 
                        tax_scale = 56, 
                        type = 56, )
                    ],
                metric_plan_limits = [
                    openapi_client.models.unibee/api/bean/merchant_metric_plan_limit.unibee.api.bean.MerchantMetricPlanLimit(
                        create_time = 56, 
                        gmt_modify = 56, 
                        id = 56, 
                        merchant_id = 56, 
                        merchant_metric_vo = openapi_client.models.unibee/api/bean/merchant_metric_simplify.unibee.api.bean.MerchantMetricSimplify(
                            aggregation_property = '', 
                            aggregation_type = 56, 
                            code = '', 
                            create_time = 56, 
                            gmt_modify = 56, 
                            id = 56, 
                            merchant_id = 56, 
                            metric_description = '', 
                            metric_name = '', 
                            type = 56, ), 
                        metric_id = 56, 
                        metric_limit = 56, 
                        plan_id = 56, )
                    ],
                onetime_addon_ids = [
                    56
                    ],
                onetime_addons = [
                    openapi_client.models.unibee/api/bean/plan_simplify.unibee.api.bean.PlanSimplify(
                        amount = 56, 
                        binding_addon_ids = '', 
                        binding_onetime_addon_ids = '', 
                        create_time = 56, 
                        currency = '', 
                        description = '', 
                        extra_metric_data = '', 
                        gas_payer = '', 
                        home_url = '', 
                        id = 56, 
                        image_url = '', 
                        interval_count = 56, 
                        interval_unit = '', 
                        merchant_id = 56, 
                        metadata = {
                            'key' : ''
                            }, 
                        plan_name = '', 
                        product_description = '', 
                        product_name = '', 
                        publish_status = 56, 
                        status = 56, 
                        tax_scale = 56, 
                        type = 56, )
                    ],
                plan = openapi_client.models.unibee/api/bean/plan_simplify.unibee.api.bean.PlanSimplify(
                    amount = 56, 
                    binding_addon_ids = '', 
                    binding_onetime_addon_ids = '', 
                    create_time = 56, 
                    currency = '', 
                    description = '', 
                    extra_metric_data = '', 
                    gas_payer = '', 
                    home_url = '', 
                    id = 56, 
                    image_url = '', 
                    interval_count = 56, 
                    interval_unit = '', 
                    merchant_id = 56, 
                    metadata = {
                        'key' : ''
                        }, 
                    plan_name = '', 
                    product_description = '', 
                    product_name = '', 
                    publish_status = 56, 
                    status = 56, 
                    tax_scale = 56, 
                    type = 56, )
            )
        else:
            return UnibeeApiBeanDetailPlanDetail(
        )
        """

    def testUnibeeApiBeanDetailPlanDetail(self):
        """Test UnibeeApiBeanDetailPlanDetail"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
