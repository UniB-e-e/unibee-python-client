# coding: utf-8

"""
    OpenAPI UniBee

    This is UniBee api server, For this sample, you can use the api key `EUXAgwv3Vcr1PFWt2SgBumMHXn3ImBqM` to test the authorization filters

    The version of the OpenAPI document: 
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.unibee_api_merchant_payment_method_list_res import UnibeeApiMerchantPaymentMethodListRes

class TestUnibeeApiMerchantPaymentMethodListRes(unittest.TestCase):
    """UnibeeApiMerchantPaymentMethodListRes unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UnibeeApiMerchantPaymentMethodListRes:
        """Test UnibeeApiMerchantPaymentMethodListRes
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UnibeeApiMerchantPaymentMethodListRes`
        """
        model = UnibeeApiMerchantPaymentMethodListRes()
        if include_optional:
            return UnibeeApiMerchantPaymentMethodListRes(
                method_list = [
                    openapi_client.models.unibee/api/bean/payment_method.unibee.api.bean.PaymentMethod(
                        data = openapi_client.models.data.data(), 
                        id = '', 
                        type = '', )
                    ]
            )
        else:
            return UnibeeApiMerchantPaymentMethodListRes(
        )
        """

    def testUnibeeApiMerchantPaymentMethodListRes(self):
        """Test UnibeeApiMerchantPaymentMethodListRes"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
