# coding: utf-8

"""
    OpenAPI UniBee

    This is UniBee api server, For this sample, you can use the api key `EUXAgwv3Vcr1PFWt2SgBumMHXn3ImBqM` to test the authorization filters

    The version of the OpenAPI document: 
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.merchant_subscription_update_submit_post200_response import MerchantSubscriptionUpdateSubmitPost200Response

class TestMerchantSubscriptionUpdateSubmitPost200Response(unittest.TestCase):
    """MerchantSubscriptionUpdateSubmitPost200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MerchantSubscriptionUpdateSubmitPost200Response:
        """Test MerchantSubscriptionUpdateSubmitPost200Response
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MerchantSubscriptionUpdateSubmitPost200Response`
        """
        model = MerchantSubscriptionUpdateSubmitPost200Response()
        if include_optional:
            return MerchantSubscriptionUpdateSubmitPost200Response(
                code = 56,
                data = openapi_client.models._merchant_subscription_update_submit_post_200_response_data._merchant_subscription_update_submit_post_200_response_data(
                    link = '', 
                    paid = True, 
                    subscription_pending_update = openapi_client.models.unibee/internal/model/entity/oversea_pay/subscription_pending_update.unibee.internal.model.entity.oversea_pay.SubscriptionPendingUpdate(
                        addon_data = '', 
                        amount = 56, 
                        create_time = 56, 
                        currency = '', 
                        data = '', 
                        effect_immediate = 56, 
                        effect_time = 56, 
                        gateway_id = 56, 
                        gateway_status = '', 
                        gmt_create = '', 
                        gmt_modify = '', 
                        id = 56, 
                        invoice_id = '', 
                        is_deleted = 56, 
                        link = '', 
                        merchant_id = 56, 
                        merchant_member_id = 56, 
                        name = '', 
                        note = '', 
                        paid = 56, 
                        plan_id = 56, 
                        proration_amount = 56, 
                        proration_date = 56, 
                        quantity = 56, 
                        response_data = '', 
                        status = 56, 
                        subscription_id = '', 
                        update_addon_data = '', 
                        update_amount = 56, 
                        update_currency = '', 
                        update_plan_id = 56, 
                        update_quantity = 56, 
                        update_subscription_id = '', 
                        user_id = 56, ), ),
                message = '',
                redirect = '',
                request_id = ''
            )
        else:
            return MerchantSubscriptionUpdateSubmitPost200Response(
        )
        """

    def testMerchantSubscriptionUpdateSubmitPost200Response(self):
        """Test MerchantSubscriptionUpdateSubmitPost200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
