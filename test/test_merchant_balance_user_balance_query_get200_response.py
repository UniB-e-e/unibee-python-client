# coding: utf-8

"""
    OpenAPI UniBee

    This is UniBee api server, For this sample, you can use the api key `EUXAgwv3Vcr1PFWt2SgBumMHXn3ImBqM` to test the authorization filters

    The version of the OpenAPI document: 
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.merchant_balance_user_balance_query_get200_response import MerchantBalanceUserBalanceQueryGet200Response

class TestMerchantBalanceUserBalanceQueryGet200Response(unittest.TestCase):
    """MerchantBalanceUserBalanceQueryGet200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MerchantBalanceUserBalanceQueryGet200Response:
        """Test MerchantBalanceUserBalanceQueryGet200Response
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MerchantBalanceUserBalanceQueryGet200Response`
        """
        model = MerchantBalanceUserBalanceQueryGet200Response()
        if include_optional:
            return MerchantBalanceUserBalanceQueryGet200Response(
                code = 56,
                data = openapi_client.models._merchant_balance_user_balance_query_get_200_response_data._merchant_balance_user_balance_query_get_200_response_data(
                    balance = openapi_client.models.unibee/internal/logic/gateway/ro/gateway_balance.unibee.internal.logic.gateway.ro.GatewayBalance(
                        amount = 56, 
                        currency = '', ), 
                    cash_balance = [
                        openapi_client.models.unibee/internal/logic/gateway/ro/gateway_balance.unibee.internal.logic.gateway.ro.GatewayBalance(
                            amount = 56, 
                            currency = '', )
                        ], 
                    invoice_credit_balance = [
                        
                        ], ),
                message = '',
                redirect = '',
                request_id = ''
            )
        else:
            return MerchantBalanceUserBalanceQueryGet200Response(
        )
        """

    def testMerchantBalanceUserBalanceQueryGet200Response(self):
        """Test MerchantBalanceUserBalanceQueryGet200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
